before_script:
  - 'export MAVEN_OPTS="-Xms4g -Xmx4g"'

stages:
  - test
  - sonar
  - build

.environment_dev:
  environment:
    name: dev
  only:
    - dev

.environment_merge:
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /(dev)/

.test:
  image: maven:3.6-jdk-13-alpine
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    untracked: true
  script:
    - >-
        mvn
        org.jacoco:jacoco-maven-plugin:0.8.5:prepare-agent
        clean test -B
        org.jacoco:jacoco-maven-plugin:0.8.5:report

.sonar:
  image: maven:3.6.3-jdk-11-slim
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    untracked: true
    policy: pull
  script:
    - |
        apt-get update && apt-get -y upgrade && apt-get install -y apt-utils jq curl unzip zip
        apt-get clean
        rm -rf                        \
          /var/lib/apt/lists/*          \
          /var/log/alternatives.log     \
          /var/log/apt/history.log      \
          /var/log/apt/term.log         \
          /var/log/dpkg.log
    - >-
        mvn sonar:sonar
        -Dsonar.gitlab.project_id="${CI_PROJECT_PATH}"
        -Dsonar.gitlab.commit_sha="${CI_COMMIT_SHA}"
        -Dsonar.gitlab.ref_name="${CI_COMMIT_REF_NAME}"
        -Dsonar.projectKey="${SONAR_PROJECT}"
        -Dsonar.projectName="${SONAR_PROJECT}"
        -Dsonar.host.url="${SONAR_URL}"
        -Dsonar.login="${SONAR_KEY}"
        -Dsonar.coverage.exclusions="src/main/java/com/specure/core/**/annotation/**,
          src/main/java/com/specure/core/**/config/**,
          src/main/java/com/specure/core/**/constant/**,
          src/main/java/com/specure/core/**/enums/**,
          src/main/java/com/specure/core/**/mapper/**,
          src/main/java/com/specure/core/**/model/**,
          src/main/java/com/specure/core/**/repository/**,
          src/main/java/com/specure/core/**/request/**,
          src/main/java/com/specure/core/**/response/**,
          sr—Å/main/resources/**,
          **/*Application.java"
    - |
        URL="$(cat ./target/sonar/report-task.txt | grep ceTaskUrl | cut -c11-)"
        sleep ${SONAR_WAIT}s
        curl -# -k -u "${SONAR_KEY}":"" "${URL}" -o sonar_analysis.txt
        export SONAR_STATUS=$(cat sonar_analysis.txt | jq -r '.task.status')
        export SONAR_ANLYSIS_ID=$(cat sonar_analysis.txt | jq -r '.task.analysisId')
        if [ "${SONAR_STATUS}" == "SUCCESS" ];then
          echo -e "\e[93mSONAR ANALYSIS SUCCESSFULL...\e[0m   ANALYSING RESULTS";
          curl -# -k -u "${SONAR_KEY}":"" "${SONAR_URL}/api/qualitygates/project_status?analysisId=${SONAR_ANLYSIS_ID}" -o sonar_result.txt
          export SONAR_RESULT=$(cat sonar_result.txt | jq -r '.projectStatus.status');

          if [ "${SONAR_RESULT}" == "ERROR" ];then
            echo -e "\e[91mSONAR RESULTS FAILED\e[0m";
            echo "$(cat sonar_result.txt | jq -r '.projectStatus.conditions')"
            exit 1
          else
            echo -e "\e[92mSONAR RESULTS SUCCESSFULL\e[0m";
            echo "$(cat sonar_result.txt | jq -r '.projectStatus.conditions')"
            exit 0
          fi
        else 
            echo -e "\e[91mSONAR ANALYSIS FAILED\e[0m"
            exit 1
        fi

.build:
  image: maven:3.6-jdk-13-alpine
  artifacts:
    untracked: false
    paths:
      - target/*.jar
  script:
    - mvn -D'maven.test.skip=true' clean install

test:
  extends:
    - .test
  only:
    - dev
  stage: test

test:merge:
  extends:
    - .environment_merge
    - .test
  stage: test

test:other:
  extends:
    - .test
  except:
    - dev
  stage: test

sonar:
  extends:
    - .sonar
  environment:
    name: "${CI_COMMIT_REF_SLUG}"
  only:
    - dev
  stage: sonar

sonar:merge:
  extends:
    - .environment_merge
    - .sonar
  stage: sonar

sonar:other:
  extends:
    - .sonar
  except:
    - dev
  stage: sonar

build:dev:
  extends:
    - .environment_dev
    - .build
  stage: build
